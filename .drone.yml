############################################
# ðŸ§± PIPELINE 1: Build & Push Docker Image
############################################
kind: pipeline
type: docker
name: CI Backend

trigger:
  branch:
    - main
  event:
    - push

steps:
  - name: Build & Push Docker Image
    image: plugins/docker
    settings:
      username: 
        from_secret: DOCKERHUB_USERNAME # pragma: allowlist secret
      password: 
        from_secret: DOCKERHUB_TOKEN # pragma: allowlist secret
      repo: nhathuyd4hp/qrapp-frontend
      cache_from:
        - nhathuyd4hp/qrapp-frontend:latest
      build_args:
        - BUILDKIT_INLINE_CACHE=1
        - VITE_API_URL=${VITE_API_URL}
        - VITE_SOCKET_URL=${VITE_SOCKET_URL}
      tags:
        - latest
secrets:
  - name: VITE_API_URL
  - name: VITE_SOCKET_URL

########################################
# ðŸš€ PIPELINE 2: Deployment via SSH
########################################
kind: pipeline
type: docker
name: CD Backend

trigger:
  event:
    - promote
  target:
    - production

steps:
  - name: Deployment
    image: ghcr.io/appleboy/drone-ssh
    settings:
      host: 
        from_secret: SSH_HOST # pragma: allowlist secret
      username: 
        from_secret: SSH_USERNAME # pragma: allowlist secret
      password:
        from_secret: SSH_PASSWORD # pragma: allowlist secret
      port: 22
      command_timeout: 10000s
      script:
        - cd ~/Document/QRApp
        - mkdir -p Frontend
        - cd ~/Document/QRApp/Frontend
        - git clone https://github.com/QRBusiness/QRApp.git . || true
        - git restore . || true
        - git pull origin main || true
        - docker network create QRNetwork || true
        - docker compose up -d --remove-orphans
